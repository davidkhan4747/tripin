import { NextResponse } from 'next/server';

// –¢–æ–∫–µ–Ω –∏ ID —á–∞—Ç–∞
const TELEGRAM_BOT_TOKEN = '7945508274:AAGtl6Dwjc1phTN6HoTFppHvyck9B5o5WEw';
const TELEGRAM_CHAT_ID = '-1002648902355';

export async function POST(request: Request) {
  try {
    const body = await request.json();
    const { name, email, message, phone, tourName, type } = body;

    if (!name) {
      return NextResponse.json(
        { error: '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' },
        { status: 400 }
      );
    }

    let telegramMessage = '';

    if (type === 'tour') {
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ —Ç—É—Ä
      if (!tourName || !phone) {
        return NextResponse.json(
          { error: '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞ —Ç—É—Ä' },
          { status: 400 }
        );
      }

      telegramMessage = `üîî –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –¢–£–†\n\n` +
        `–¢—É—Ä: ${tourName}\n` +
        `–ò–º—è: ${name}\n` +
        `–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n` +
        (email ? `Email: ${email}\n` : '') +
        `\n–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`;
    } else {
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
      if (!email || !message) {
        return NextResponse.json(
          { error: 'Email –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤' },
          { status: 400 }
        );
      }

      telegramMessage = `üì© –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –° –°–ê–ô–¢–ê\n\n` +
        `–ò–º—è: ${name}\n` +
        `Email: ${email}\n` +
        `–°–æ–æ–±—â–µ–Ω–∏–µ: ${message}\n` +
        `\n–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: telegramMessage,
      }),
    });

    const telegramResponse = await response.json();

    if (!telegramResponse.ok) {
      console.error('Telegram API Error:', telegramResponse);
      return NextResponse.json(
        { error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram', details: telegramResponse },
        { status: 500 }
      );
    }

    return NextResponse.json({ success: true });
  } catch (error) {
    console.error('Error sending message to Telegram:', error);
    return NextResponse.json(
      { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', details: error instanceof Error ? error.message : String(error) },
      { status: 500 }
    );
  }
}
